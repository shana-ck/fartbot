import { CID } from 'multiformats/cid';
import ReadableRepo from '../readable-repo';
import { RecordClaim, VerifiedDiff, VerifiedRepo } from '../types';
import BlockMap from '../block-map';
export declare const verifyRepoCar: (carBytes: Uint8Array, did?: string, signingKey?: string) => Promise<VerifiedRepo>;
export declare const verifyRepo: (blocks: BlockMap, head: CID, did?: string, signingKey?: string, opts?: {
    ensureLeaves?: boolean;
}) => Promise<VerifiedRepo>;
export declare const verifyDiffCar: (repo: ReadableRepo | null, carBytes: Uint8Array, did?: string, signingKey?: string, opts?: {
    ensureLeaves?: boolean;
}) => Promise<VerifiedDiff>;
export declare const verifyDiff: (repo: ReadableRepo | null, updateBlocks: BlockMap, updateRoot: CID, did?: string, signingKey?: string, opts?: {
    ensureLeaves?: boolean;
}) => Promise<VerifiedDiff>;
export declare const verifyProofs: (proofs: Uint8Array, claims: RecordClaim[], did: string, didKey: string) => Promise<{
    verified: RecordClaim[];
    unverified: RecordClaim[];
}>;
export declare const verifyRecords: (proofs: Uint8Array, did: string, signingKey: string) => Promise<RecordClaim[]>;
export declare class RepoVerificationError extends Error {
}
