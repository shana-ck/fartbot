import type { AppBskyRichtextFacet } from "@atproto/api";
export declare const utf16IndexToUtf8Index: (text: string, i: number) => number;
export declare const utf8IndexToUtf16Index: (text: string, i: number) => number;
/**
 * This is a modified version of the {@link import("@atproto/api").RichText#detectFacets} function that doesn't use the UnicodeString class.
 * This allows us to avoid importing `graphemer`, instead using the `Intl.Segmenter` builtin (see {@link graphemeLength}), which saves ~800kB in bundle size (200kB gzipped).
 *
 * JS strings are encoded as UTF-16; `utf16IndexToUtf8Index` is used to get UTF-8 byte indices of facets within text.
 * @param text Text to detect facets in.
 */
export declare function detectFacets(text: string): Array<AppBskyRichtextFacet.Main> | undefined;
